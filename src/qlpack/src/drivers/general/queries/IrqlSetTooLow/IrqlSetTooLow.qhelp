<!DOCTYPE qhelp PUBLIC "-//Semmle//qhelp//EN" "qhelp.dtd">
<qhelp>
	<overview>
		<p>
			The function has lowered the IRQL to a level below what is allowed.
		</p>
	</overview>
	<recommendation>
		<p>
			A function has been annotated as having a minimum IRQL, but the execution of that function lowers the IRQL below that minimum.  If you have applied custom IRQL annotations to your own functions, confirm that they are accurate.  If your function is a dispatch routine or callback, review the expected IRQL levels for that role.
		</p>
	</recommendation>
	<example>
		<p>
			In this example, the driver tries to lower the IRQL to PASSIVE_LEVEL within a KEDEFERRED_ROUTINE callback, which must run at DISPATCH_LEVEL or higher.  This should be avoided.
		</p>
		<sample language="c"><![CDATA[
			// Within a KDEFERRED_ROUTINE callback
			KeLowerIrql(PASSIVE_LEVEL, &oldIRQL);
			]]>
		</sample>
	</example>
	<references>
		<li>
			<a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28124-call-below-minimum-irq-level">
				C28124 warning - Windows Drivers
			</a>
		</li>
		<li>
			<a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/irql-annotations-for-drivers">
				IRQL annotations for drivers
			</a>
		</li>
	</references>
	<semmleNotes>
		<p>This query uses interprocedural data-flow analysis and can take a large amount of CPU time and memory to run.</p>
		<p>This query may provide false positives in cases where functions are not annotated with their expected IRQL ranges or behaviors.</p>
		<p>For information on how to annotate your functions with information about how they adjust the IRQL, see "IRQL annotations for drivers" in the references section.</p>
	</semmleNotes>
</qhelp>
