<!DOCTYPE qhelp PUBLIC "-//Semmle//qhelp//EN" "qhelp.dtd">
<qhelp>
	<overview>
		<p>
			Direct access of opaque MDL fields should be avoided, as opaque struct layouts may change without warning.
		</p>
	</overview>
	<recommendation>
		<p>
			Instead of accessing MDL fields directly, driver writers should make use of the <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-mmgetmdlvirtualaddress">MmGetMdlVirtualAddress</a>, <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-mmgetmdlbytecount">MmGetMdlByteCount</a>, <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-mmgetmdlbyteoffset">MmGetMdlByteOffset</a>, and <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-mmgetsystemaddressformdlsafe">MmGetSystemAddressForMdlSafe</a> macros.
		</p>
	</recommendation>
	<example>
		<p>
			In this example, the driver directly accesses the ByteCount field of an MDL.
		</p>
		<sample language="c"><![CDATA[
			VOID DummyMdlFunction(PMDL Mdl)
			{
				PMDL currentMdl, nextMdl;

				for (currentMdl = Mdl; currentMdl != NULL; currentMdl = nextMdl)
				{
					nextMdl = currentMdl->Next;
					if (currentMdl->MdlFlags & MDL_PAGES_LOCKED && currentMdl->ByteCount > 0)
					{
						MmUnlockPages(currentMdl);
					}
					IoFreeMdl(currentMdl);
				}
			}
			]]>
		</sample>		
		<p>
			The driver should instead use the MmGetMdlByteCount function.
		</p>
		<sample language="c"><![CDATA[
			VOID DummyMdlFunction(PMDL Mdl)
			{
				PMDL currentMdl, nextMdl;

				for (currentMdl = Mdl; currentMdl != NULL; currentMdl = nextMdl)
				{
					nextMdl = currentMdl->Next;
					if (currentMdl->MdlFlags & MDL_PAGES_LOCKED && MmGetMdlByteCount(currentMdl) > 0)
					{
						MmUnlockPages(currentMdl);
					}
					IoFreeMdl(currentMdl);
				}
			}
			]]>
		</sample>		
	</example>
	<references>
		<li>
			<a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/using-mdls">
				Using MDLs (MSDN)
			</a>
		</li>
	</references>
</qhelp>
