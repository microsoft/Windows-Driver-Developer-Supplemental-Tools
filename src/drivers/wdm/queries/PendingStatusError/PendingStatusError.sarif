{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.11.5",
        "rules" : [ {
          "id" : "cpp/portedqueries/pending-status-error",
          "name" : "cpp/portedqueries/pending-status-error",
          "shortDescription" : {
            "text" : "PendingStatusError"
          },
          "fullDescription" : {
            "text" : "A dispatch routine that calls IoMarkIrpPending includes at least one path in which the driver returns a value other than STATUS_PENDING. The IoMarkIrpPending routine marks the specified IRP, indicating that a driver's dispatch routine subsequently returned STATUS_PENDING because further processing is required by other driver routines. For more information please refer C28143 Code Analysis rule."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "description" : "A dispatch routine that calls IoMarkIrpPending includes at least one path in which the driver returns a value other than STATUS_PENDING. The IoMarkIrpPending routine marks the specified IRP, indicating that a driver's dispatch routine subsequently returned STATUS_PENDING because further processing is required by other driver routines. For more information please refer C28143 Code Analysis rule.",
            "feature.area" : "Multiple",
            "id" : "cpp/portedqueries/pending-status-error",
            "kind" : "problem",
            "name" : "PendingStatusError",
            "platform" : "Desktop",
            "problem.severity" : "error",
            "repro.text" : "The following code locations potentially contain IoMarkIrpPending calls that do not return STATUS_PENDING",
            "version" : "1.0"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "microsoft/windows-drivers",
        "semanticVersion" : "0.1.0+6a14e59810fe14708a885b859a87353d22b908c8",
        "locations" : [ {
          "uri" : "file:///C:/codeql-home/Windows-Driver-Developer-Supplemental-Tools/src/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///C:/codeql-home/Windows-Driver-Developer-Supplemental-Tools/src/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      }, {
        "name" : "legacy-upgrades",
        "semanticVersion" : "0.0.0",
        "locations" : [ {
          "uri" : "file:///C:/codeql-home/codeql/legacy-upgrades/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///C:/codeql-home/codeql/legacy-upgrades/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "artifacts" : [ {
      "location" : {
        "uri" : "driver/driver_snippet.c",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    } ],
    "results" : [ {
      "ruleId" : "cpp/portedqueries/pending-status-error",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "cpp/portedqueries/pending-status-error",
        "index" : 0
      },
      "message" : {
        "text" : "The return type should be STATUS_PENDING when making IoMarkIrpPending calls"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "driver/driver_snippet.c",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 57,
            "startColumn" : 9,
            "endColumn" : 25
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "53405033a4fa7dc4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    } ],
    "columnKind" : "utf16CodeUnits",
    "properties" : {
      "semmle.formatSpecifier" : "sarifv2.1.0"
    }
  } ]
}